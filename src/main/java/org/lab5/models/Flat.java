package org.lab5.models;

import com.opencsv.bean.CsvBindByName;
import com.opencsv.bean.CsvCustomBindByName;
import com.opencsv.bean.CsvDate;
import org.lab5.CSV.CoordinatesConverter;
import org.lab5.CSV.HouseConverter;
import org.lab5.annotations.*;

import java.io.Serializable;
import java.time.ZonedDateTime;

@DataModel
public class Flat implements Cloneable, Comparable<Flat>, Serializable {

    @CsvBindByName(column = "key")
    @NotNull()
    @Skip
    Long key;
    @CsvBindByName(column = "id")
    @AutoGenerated()
    @Min()
    private Long id; //Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически
    @CsvBindByName(column = "name")
    @Prompt(description = "Введите имя:")
    @NotNull()
    private String name; //Поле не может быть null, Строка не может быть пустой
    @CsvCustomBindByName(column = "coordinates", converter = CoordinatesConverter.class)
    @Prompt(description = "Введите координаты:")
    @NotNull()
    private Coordinates coordinates; //Поле не может быть null
    @CsvDate("yyyy-MM-dd'T'HH:mm:ss.SSSZ")
    @CsvBindByName(column = "creationDate")
    @AutoGenerated()
    @NotNull
    private java.time.ZonedDateTime creationDate; //Поле не может быть null, Значение этого поля должно генерироваться автоматически
    @CsvBindByName(column = "area")
    @CustomName(name = "Площадь")
    @Prompt(description = "Введите площадь:")
    @Min()
    @NotNull
    private long area; //Значение поля должно быть больше 0
    @CsvBindByName(column = "numberOfRooms")
    @CustomName(name = "Количество комнат")
    @Prompt(description = "Введите количество комнат:")
    @Min()
    private int numberOfRooms; //Значение поля должно быть больше 0
    @CsvBindByName(column = "numberOfBathrooms")
    @CustomName(name = "Ванные")
    @Prompt(description = "Введите количество ванных:")
    @Min()
    private Long numberOfBathrooms; //Значение поля должно быть больше 0
    @CsvBindByName(column = "view")
    @CustomName(name = "Вид из окна")
    @Prompt(description = "Введите вид:")
    @NotNull
    private View view; //Поле может быть null
    @CsvBindByName(column = "transport")
    @CustomName(name = "Транспорт")
    @Prompt(description = "Введите информациию о транспорте:")
    private Transport transport;
    @CsvCustomBindByName(column = "house", converter = HouseConverter.class)
    @NotNull
    @CustomName(name = "Дом")
    @Prompt(description = "Введите информациию о доме:")
    private House house; //Поле не может быть null

    public Flat() {
    }

    public long getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getNumberOfRooms() {
        return numberOfRooms;
    }

    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }


    @Override
    public int compareTo(Flat o) {
        return (int) (this.id - o.getId());
    }

    public Long getKey() {
        return key;
    }

    public void setKey(Long key) {
        this.key = key;
    }

    public Coordinates getCoordinates() {
        return coordinates;
    }

    public ZonedDateTime getCreationDate() {
        return creationDate;
    }

    public Long getArea() {
        return area;
    }

    public long getNumberOfBathrooms() {
        return numberOfBathrooms;
    }

    public View getView() {
        return view;
    }

    public Transport getTransport() {
        return transport;
    }

    public House getHouse() {
        return house;
    }
}