package org.lab5.models;

import com.opencsv.bean.CsvBindByName;
import com.opencsv.bean.CsvCustomBindByName;
import com.opencsv.bean.CsvDate;
import org.lab5.CSV.CoordinatesConverter;
import org.lab5.CSV.HouseConverter;
import org.lab5.annotations.*;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;

@DataModel
public class Flat extends Model implements Cloneable, Comparable<Flat>, Serializable {

    @CsvBindByName(column = "key")
    @NotNull()
    @Skip
    Long key;
    @CsvBindByName(column = "id")
    @AutoGenerated()
    @Min()
    private Long id; //Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически
    @CsvBindByName(column = "name")
    @Prompt(description = "Введите имя:")
    @NotNull()
    private String name; //Поле не может быть null, Строка не может быть пустой
    @CsvCustomBindByName(column = "coordinates", converter = CoordinatesConverter.class)
    @Prompt(description = "Введите координаты:")
    @NotNull()
    private Coordinates coordinates; //Поле не может быть null
    @CsvDate("yyyy-MM-dd'T'HH:mm:ss")
    @CsvBindByName(column = "creationDate")
    @AutoGenerated()
    @NotNull
    private java.time.LocalDateTime creationDate; //Поле не может быть null, Значение этого поля должно генерироваться автоматически
    @CsvBindByName(column = "area")
    @CustomName(name = "Площадь")
    @Prompt(description = "Введите площадь:")
    @Min()
    @NotNull
    private long area; //Значение поля должно быть больше 0
    @CsvBindByName(column = "numberOfRooms")
    @CustomName(name = "Количество комнат")
    @Prompt(description = "Введите количество комнат:")
    @Min()
    private int numberOfRooms; //Значение поля должно быть больше 0
    @CsvBindByName(column = "numberOfBathrooms")
    @CustomName(name = "Ванные")
    @Prompt(description = "Введите количество ванных:")
    @Min()
    private Long numberOfBathrooms; //Значение поля должно быть больше 0
    @CsvBindByName(column = "view")
    @CustomName(name = "Вид из окна")
    @Prompt(description = "Введите вид:")
    @NotNull
    private View view; //Поле может быть null
    @CsvBindByName(column = "transport")
    @CustomName(name = "Транспорт")
    @Prompt(description = "Введите информациию о транспорте:")
    private Transport transport;
    @CsvCustomBindByName(column = "house", converter = HouseConverter.class)
    @NotNull
    @CustomName(name = "Дом")
    @Prompt(description = "Введите информациию о доме:")
    private House house; //Поле не может быть null

    @Override
    public String toString() {
        return null;
    }

    public Flat() {
    }

    @Override
    protected void initializeSetterMap() {
        registerSetter("id",(value) -> setId((Long) value));
        registerSetter("name",(value) -> setName((String) value));
        registerSetter("creationDate",(value) -> setCreationDate((LocalDateTime) value));
        registerSetter("area",(value) -> setArea((Long) value));
        registerSetter("numberOfRooms", (value) -> setArea((Integer) value));
        registerSetter("numberOfBathrooms", (value) -> setNumberOfBathrooms((Long) value));
        registerSetter("view", (value) -> setView((View) value));
        registerSetter("transport", (value) -> setTransport((Transport) value));

    }

    public long getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getNumberOfRooms() {
        return numberOfRooms;
    }

    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }


    @Override
    public int compareTo(Flat o) {
        return (int) (this.id - o.getId());
    }

    public Long getKey() {
        return key;
    }

    public void setKey(Long key) {
        this.key = key;
    }

    public Coordinates getCoordinates() {
        return coordinates;
    }

    public House getHouse() {
        return house;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setCoordinates(Coordinates coordinates) {
        this.coordinates = coordinates;
    }

    public void setCreationDate(LocalDateTime creationDate) {
        this.creationDate = creationDate;
    }

    public void setArea(long area) {
        this.area = area;
    }

    public void setNumberOfRooms(int numberOfRooms) {
        this.numberOfRooms = numberOfRooms;
    }

    public void setNumberOfBathrooms(Long numberOfBathrooms) {
        this.numberOfBathrooms = numberOfBathrooms;
    }

    public void setView(View view) {
        this.view = view;
    }

    public void setTransport(Transport transport) {
        this.transport = transport;
    }
}